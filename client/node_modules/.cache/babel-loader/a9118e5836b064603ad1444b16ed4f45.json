{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Taylor\\\\array\\\\projects\\\\showyourgroove_chatroom\\\\src\\\\components\\\\auth\\\\registerCard.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport { Link } from \"react-router-dom\";\nimport * as Yup from \"yup\";\nimport { register } from '../../state/authSlice';\nimport { clearMessage } from '../../state/messageSlice';\nimport Container from 'react-bootstrap/Container';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RegisterCard = () => {\n  _s();\n\n  const [successful, setSuccessful] = useState(false);\n  const {\n    message\n  } = useSelector(state => state.message);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(clearMessage());\n  }, [dispatch]);\n  const initialValues = {\n    username: \"\",\n    email: \"\",\n    password: \"\"\n  };\n  const validationSchema = Yup.object().shape({\n    username: Yup.string().test(\"len\", \"The username must be between 3 and 20 characters.\", val => val && val.toString().length >= 3 && val.toString().length <= 20).required(\"This field is required!\"),\n    email: Yup.string().email(\"This is not a valid email.\").required(\"This field is required!\"),\n    password: Yup.string().test(\"len\", \"The password must be between 6 and 40 characters.\", val => val && val.toString().length >= 6 && val.toString().length <= 40).required(\"This field is required!\")\n  });\n\n  const handleRegister = formValue => {\n    const {\n      username,\n      email,\n      password\n    } = formValue;\n    setSuccessful(false);\n    dispatch(register({\n      username,\n      email,\n      password\n    })).unwrap().then(() => {\n      setSuccessful(true);\n    }).catch(() => {\n      setSuccessful(false);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    style: {\n      width: '35rem',\n      height: '40rem'\n    },\n    className: \"bg-dark mt-5 pt-4\",\n    children: /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n        className: \"mt-2 mb-4 \",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Create an account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n        children: [/*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: initialValues,\n          validationSchema: validationSchema,\n          onSubmit: handleRegister,\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            children: !successful && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"mb-4 mx-5\",\n                controlId: \"formBasicEmail\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"email\",\n                  placeholder: \"Enter email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                  name: \"username\",\n                  component: \"div\",\n                  className: \"alert alert-danger\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"mb-4 mx-5\",\n                controlId: \"formBasicUser\",\n                children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"email\",\n                  placeholder: \"Create Username\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"mb-4 mx-5\",\n                controlId: \"formBasicPassword\",\n                children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"password\",\n                  placeholder: \"Create Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"mb-4 mx-5\",\n                controlId: \"formBasicPassword2\",\n                children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"password\",\n                  placeholder: \"Re-Enter Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                className: \"btn-secondary mt-2 px-5 py-2\",\n                type: \"submit\",\n                children: \"Create Account\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), message && /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: successful ? \"alert alert-sucess\" : \"alert alert-danger\",\n            role: \"alert\",\n            children: message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Container, {\n          className: \"mt-5\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-light\",\n            children: \"Already have an account?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Login to continue sharing your groove!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: \"btn-secondary px-5 py-2\",\n            type: \"submit\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/login\",\n              className: \"text-decoration-none text-light\",\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n};\n\n_s(RegisterCard, \"zjVxq4UGnCl/YWmbvHguqOnDptI=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = RegisterCard;\nexport default RegisterCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterCard\");","map":{"version":3,"sources":["C:/Users/Taylor/array/projects/showyourgroove_chatroom/src/components/auth/registerCard.jsx"],"names":["React","useState","useEffect","useDispatch","useSelector","Formik","Field","Form","ErrorMessage","Link","Yup","register","clearMessage","Container","Card","Button","RegisterCard","successful","setSuccessful","message","state","dispatch","initialValues","username","email","password","validationSchema","object","shape","string","test","val","toString","length","required","handleRegister","formValue","unwrap","then","catch","width","height"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Formik, Field, Form, ErrorMessage } from 'formik'\r\nimport { Link } from \"react-router-dom\";\r\nimport * as Yup from \"yup\";\r\n\r\nimport { register } from '../../state/authSlice';\r\nimport { clearMessage } from '../../state/messageSlice';\r\n\r\nimport Container from 'react-bootstrap/Container'\r\nimport Card from 'react-bootstrap/Card'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nconst RegisterCard = () => {\r\n    const [successful, setSuccessful] = useState(false);\r\n\r\n    const { message } = useSelector((state) => state.message);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(clearMessage());\r\n    }, [dispatch]);\r\n\r\n    const initialValues = {\r\n        username: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n    };\r\n\r\n    const validationSchema = Yup.object().shape({\r\n        username: Yup.string()\r\n            .test(\r\n                \"len\",\r\n                \"The username must be between 3 and 20 characters.\",\r\n                (val) =>\r\n                    val &&\r\n                    val.toString().length >= 3 &&\r\n                    val.toString().length <= 20\r\n            )\r\n            .required(\"This field is required!\"),\r\n        email: Yup.string()\r\n            .email(\"This is not a valid email.\")\r\n            .required(\"This field is required!\"),\r\n        password: Yup.string()\r\n            .test(\r\n                \"len\",\r\n                \"The password must be between 6 and 40 characters.\",\r\n                (val) =>\r\n                    val &&\r\n                    val.toString().length >= 6 &&\r\n                    val.toString().length <= 40\r\n            )\r\n            .required(\"This field is required!\"),\r\n    });\r\n\r\n    const handleRegister = (formValue) => {\r\n        const { username, email, password } = formValue;\r\n\r\n        setSuccessful(false);\r\n\r\n        dispatch(register({ username, email, password }))\r\n            .unwrap()\r\n            .then(() => {\r\n                setSuccessful(true);\r\n            })\r\n            .catch(() => {\r\n                setSuccessful(false);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <Card style={{ width: '35rem', height: '40rem' }} className=\"bg-dark mt-5 pt-4\">\r\n            <Card.Body>\r\n                <Card.Title className=\"mt-2 mb-4 \">\r\n                    <h1>Create an account</h1>\r\n                </Card.Title>\r\n                <Card.Text>\r\n                    <Formik\r\n                        initialValues={initialValues}\r\n                        validationSchema={validationSchema}\r\n                        onSubmit={handleRegister}\r\n                    >\r\n                        <Form>\r\n                            {!successful && (\r\n                                <div>\r\n                                    <Form.Group className=\"mb-4 mx-5\" controlId=\"formBasicEmail\">\r\n                                        <Form.Control type=\"email\" placeholder=\"Enter email\" />\r\n                                        <ErrorMessage\r\n                                            name=\"username\"\r\n                                            component=\"div\"\r\n                                            className=\"alert alert-danger\"\r\n                                        />\r\n                                    </Form.Group>\r\n                                    <Form.Group className=\"mb-4 mx-5\" controlId=\"formBasicUser\">\r\n                                        <Form.Control type=\"email\" placeholder=\"Create Username\" />\r\n                                    </Form.Group>\r\n                                    <Form.Group className=\"mb-4 mx-5\" controlId=\"formBasicPassword\">\r\n                                        <Form.Control type=\"password\" placeholder=\"Create Password\" />\r\n                                    </Form.Group>\r\n                                    <Form.Group className=\"mb-4 mx-5\" controlId=\"formBasicPassword2\">\r\n                                        <Form.Control type=\"password\" placeholder=\"Re-Enter Password\" />\r\n                                    </Form.Group>\r\n                                    <Button className=\"btn-secondary mt-2 px-5 py-2\" type=\"submit\">\r\n                                        Create Account\r\n                                    </Button>\r\n                                </div>\r\n                            )}\r\n                        </Form>\r\n                    </Formik>\r\n\r\n                    {message && (\r\n                        <Form.Group>\r\n                            <div className={successful ? \"alert alert-sucess\" : \"alert alert-danger\"}\r\n                            role=\"alert\"\r\n                            >\r\n                                {message}\r\n                            </div>\r\n                        </Form.Group>\r\n                    )}\r\n                    <Container className=\"mt-5\">\r\n                        <h3 className='text-light'>Already have an account?</h3>\r\n                        <p>Login to continue sharing your groove!</p>\r\n                        <Button className=\"btn-secondary px-5 py-2\" type=\"submit\">\r\n                            <Link to=\"/login\" className=\"text-decoration-none text-light\">\r\n                                Login\r\n                            </Link>\r\n                        </Button>\r\n                    </Container>\r\n                </Card.Text>\r\n            </Card.Body>\r\n\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default RegisterCard;"]},"metadata":{},"sourceType":"module"}