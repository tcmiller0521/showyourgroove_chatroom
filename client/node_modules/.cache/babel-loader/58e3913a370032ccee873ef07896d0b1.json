{"ast":null,"code":"import { REGISTER_SUCCESS, REGISTER_FAIL, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT } from '../actions/types';\nconst user = JSON.parse(localStorage.getItem(\"user\"));\nconst initialState = user ? {\n  isLoggedIn: true,\n  user\n} : {\n  isLoggedIn: false,\n  user: null\n};\nexport default function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case REGISTER_SUCCESS:\n      return { ...state,\n        isLoggedIn: false\n      };\n\n    case REGISTER_FAIL:\n      return { ...state,\n        isLoggedIn: false\n      };\n\n    case LOGIN_SUCCESS:\n      return { ...state,\n        isLoggedIn: true,\n        user: payload.user\n      };\n\n    case LOGIN_FAIL:\n      return { ...state,\n        isLoggedIn: false,\n        user: null\n      };\n\n    case LOGOUT:\n      return { ...state,\n        isLoggedIn: false,\n        user: null\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/Users/Taylor/array/projects/showyourgroove_chatroom/src/reducers/auth.js"],"names":["REGISTER_SUCCESS","REGISTER_FAIL","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","user","JSON","parse","localStorage","getItem","initialState","isLoggedIn","state","action","type","payload"],"mappings":"AAAA,SACIA,gBADJ,EAEIC,aAFJ,EAGIC,aAHJ,EAIIC,UAJJ,EAKIC,MALJ,QAMO,kBANP;AAQA,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAb;AAEA,MAAMC,YAAY,GAAGL,IAAI,GACnB;AAAEM,EAAAA,UAAU,EAAE,IAAd;AAAoBN,EAAAA;AAApB,CADmB,GAEnB;AAAEM,EAAAA,UAAU,EAAE,KAAd;AAAqBN,EAAAA,IAAI,EAAE;AAA3B,CAFN;AAIA,eAAe,YAAwC;AAAA,MAA9BO,KAA8B,uEAAtBF,YAAsB;AAAA,MAARG,MAAQ;AACnD,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBF,MAA1B;;AAEA,UAAQC,IAAR;AACI,SAAKd,gBAAL;AACI,aAAO,EACH,GAAGY,KADA;AAEHD,QAAAA,UAAU,EAAE;AAFT,OAAP;;AAIJ,SAAKV,aAAL;AACI,aAAO,EACH,GAAGW,KADA;AAEHD,QAAAA,UAAU,EAAE;AAFT,OAAP;;AAIJ,SAAKT,aAAL;AACI,aAAO,EACH,GAAGU,KADA;AAEHD,QAAAA,UAAU,EAAE,IAFT;AAGHN,QAAAA,IAAI,EAAEU,OAAO,CAACV;AAHX,OAAP;;AAKJ,SAAKF,UAAL;AACI,aAAO,EACH,GAAGS,KADA;AAEHD,QAAAA,UAAU,EAAE,KAFT;AAGHN,QAAAA,IAAI,EAAE;AAHH,OAAP;;AAKJ,SAAKD,MAAL;AACI,aAAO,EACH,GAAGQ,KADA;AAEHD,QAAAA,UAAU,EAAE,KAFT;AAGHN,QAAAA,IAAI,EAAE;AAHH,OAAP;;AAKJ;AACI,aAAOO,KAAP;AA9BR;AAgCH","sourcesContent":["import {\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT,\r\n} from '../actions/types';\r\n\r\nconst user = JSON.parse(localStorage.getItem(\"user\"));\r\n\r\nconst initialState = user\r\n    ? { isLoggedIn: true, user }\r\n    : { isLoggedIn: false, user: null };\r\n\r\nexport default function (state = initialState, action) {\r\n    const { type, payload } = action;\r\n\r\n    switch (type) {\r\n        case REGISTER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isLoggedIn: false,\r\n            };\r\n        case REGISTER_FAIL:\r\n            return {\r\n                ...state,\r\n                isLoggedIn: false,\r\n            };\r\n        case LOGIN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isLoggedIn: true,\r\n                user: payload.user,\r\n            };\r\n        case LOGIN_FAIL:\r\n            return {\r\n                ...state,\r\n                isLoggedIn: false,\r\n                user: null,\r\n            };\r\n        case LOGOUT:\r\n            return {\r\n                ...state,\r\n                isLoggedIn: false,\r\n                user: null,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}