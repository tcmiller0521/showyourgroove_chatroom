{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Taylor\\\\array\\\\projects\\\\showyourgroove_chatroom\\\\src\\\\components\\\\auth\\\\logincard.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { Formik, Form, ErrorMessage } from \"formik\";\nimport * as Yup from 'yup';\nimport { login } from '../../state/authSlice';\nimport { clearMessage } from '../../state/messageSlice';\nimport Container from 'react-bootstrap/Container';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginCard = props => {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n  const {\n    isLoggedIn\n  } = useSelector(state => state.auth);\n  const {\n    message\n  } = useSelector(state => state.message);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(clearMessage());\n  }, [dispatch]);\n  const initialValues = {\n    username: \"\",\n    password: \"\"\n  };\n  const validationSchema = Yup.object().shape({\n    username: Yup.string().required(\"This field is required!\"),\n    password: Yup.string().required(\"This field is required!\")\n  });\n\n  const handleLogin = formValue => {\n    const {\n      username,\n      password\n    } = formValue;\n    setLoading(true);\n    dispatch(login({\n      username,\n      password\n    })).unwrap().then(() => {\n      props.history.push(\"/profile\");\n      window.location.reload();\n    }).catch(() => {\n      setLoading(false);\n    });\n  };\n\n  if (isLoggedIn) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    style: {\n      width: '35rem',\n      height: '40rem'\n    },\n    className: \"bg-dark mt-5 pt-4\",\n    children: /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n        className: \"my-4 \",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n        children: [/*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: initialValues,\n          validationSchema: validationSchema,\n          onSubmit: handleLogin,\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-3 mx-5\",\n              controlId: \"formBasicEmail\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"email\",\n                placeholder: \"Enter email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                name: \"username\",\n                component: \"div\",\n                className: \"alert alert-danger\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-3 mx-5\",\n              controlId: \"formBasicPassword\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"password\",\n                placeholder: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                name: \"username\",\n                component: \"div\",\n                className: \"alert alert-danger\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n                children: /*#__PURE__*/_jsxDEV(Link, {\n                  to: \"/forgotpassword\",\n                  className: \"text-success\",\n                  children: \"Forgot Passsword?\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 44\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                className: \"btn-secondary mt-2 px-5 py-2\",\n                type: \"submit\",\n                disabled: loading && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"spinner-border spinner-border-sm\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 41\n                }, this),\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Login\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), message && /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"alert alert-danger\",\n            role: \"alert\",\n            children: message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Container, {\n          className: \"mt-5\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"New Here?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Let's get you set up to start sharing your groove!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: \"btn-secondary px-5 py-2\",\n            type: \"submit\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/register\",\n              className: \"text-decoration-none text-light\",\n              children: \"Register\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n};\n\n_s(LoginCard, \"FsGQvZ/Bbm8H2WiWMG/q4+O9ZwA=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = LoginCard;\nexport default LoginCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginCard\");","map":{"version":3,"sources":["C:/Users/Taylor/array/projects/showyourgroove_chatroom/src/components/auth/logincard.jsx"],"names":["React","useState","useEffect","useDispatch","useSelector","Redirect","Formik","Form","ErrorMessage","Yup","login","clearMessage","Container","Card","Button","Link","LoginCard","props","loading","setLoading","isLoggedIn","state","auth","message","dispatch","initialValues","username","password","validationSchema","object","shape","string","required","handleLogin","formValue","unwrap","then","history","push","window","location","reload","catch","width","height"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Formik, Form, ErrorMessage } from \"formik\";\r\nimport * as Yup from 'yup';\r\n\r\nimport { login } from '../../state/authSlice';\r\nimport { clearMessage } from '../../state/messageSlice';\r\n\r\nimport Container from 'react-bootstrap/Container';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst LoginCard = (props) => {\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const { isLoggedIn } = useSelector((state) => state.auth);\r\n    const { message } = useSelector((state) => state.message);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(clearMessage());\r\n    }, [dispatch]);\r\n\r\n    const initialValues = {\r\n        username: \"\",\r\n        password: \"\",\r\n    };\r\n\r\n    const validationSchema = Yup.object().shape({\r\n        username: Yup.string().required(\"This field is required!\"),\r\n        password: Yup.string().required(\"This field is required!\"),\r\n    });\r\n\r\n    const handleLogin = (formValue) => {\r\n        const { username, password } = formValue;\r\n        setLoading(true);\r\n\r\n        dispatch(login({ username, password }))\r\n            .unwrap()\r\n            .then(() => {\r\n                props.history.push(\"/profile\");\r\n                window.location.reload();\r\n            })\r\n            .catch(() => {\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    if (isLoggedIn) {\r\n        return <Redirect to=\"/profile\" />;\r\n    }\r\n\r\n\r\n    return (\r\n        <Card style={{ width: '35rem', height: '40rem' }} className=\"bg-dark mt-5 pt-4\">\r\n            <Card.Body>\r\n                <Card.Title className=\"my-4 \">\r\n                    <h1>Sign In</h1>\r\n                </Card.Title>\r\n                <Card.Text>\r\n                    <Formik\r\n                        initialValues={initialValues}\r\n                        validationSchema={validationSchema}\r\n                        onSubmit={handleLogin}\r\n                    >\r\n                        <Form>\r\n                            <Form.Group className=\"mb-3 mx-5\" controlId=\"formBasicEmail\">\r\n                                <Form.Control type=\"email\" placeholder=\"Enter email\" />\r\n                                <ErrorMessage\r\n                                    name=\"username\"\r\n                                    component=\"div\"\r\n                                    className=\"alert alert-danger\"\r\n                                />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group className=\"mb-3 mx-5\" controlId=\"formBasicPassword\">\r\n                                <Form.Control type=\"password\" placeholder=\"Password\" />\r\n                                <ErrorMessage\r\n                                    name=\"username\"\r\n                                    component=\"div\"\r\n                                    className=\"alert alert-danger\"\r\n                                />\r\n                                <Form.Text><Link to=\"/forgotpassword\" className=\"text-success\">Forgot Passsword?</Link></Form.Text>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group>\r\n                                <Button className=\"btn-secondary mt-2 px-5 py-2\" type=\"submit\" disabled=\r\n                                {loading && (\r\n                                        <span className=\"spinner-border spinner-border-sm\"></span>\r\n                                    )}>\r\n                                    <span>Login</span>\r\n                                </Button>\r\n                            </Form.Group>\r\n                        </Form>\r\n                    </Formik>\r\n\r\n                    {message && (\r\n                        <Form.Group>\r\n                            <div className=\"alert alert-danger\" role=\"alert\">\r\n                                {message}\r\n                            </div>\r\n                        </Form.Group>\r\n                    )}\r\n                    <Container className=\"mt-5\">\r\n                        <h1>New Here?</h1>\r\n                        <p>Let's get you set up to start sharing your groove!</p>\r\n                        <Button className=\"btn-secondary px-5 py-2\" type=\"submit\">\r\n                            <Link to=\"/register\" className=\"text-decoration-none text-light\">\r\n                                Register\r\n                            </Link>\r\n                        </Button>\r\n                    </Container>\r\n                </Card.Text>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default LoginCard;"]},"metadata":{},"sourceType":"module"}