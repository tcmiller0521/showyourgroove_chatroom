{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Taylor\\\\array\\\\projects\\\\showyourgroove_chatroom\\\\src\\\\components\\\\auth\\\\logincard.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nimport { register } from \"../slices/auth\";\nimport { clearMessage } from \"../slices/message\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Register = () => {\n  _s();\n\n  const [successful, setSuccessful] = useState(false);\n  const {\n    message\n  } = useSelector(state => state.message);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(clearMessage());\n  }, [dispatch]);\n  const initialValues = {\n    username: \"\",\n    email: \"\",\n    password: \"\"\n  };\n  const validationSchema = Yup.object().shape({\n    username: Yup.string().test(\"len\", \"The username must be between 3 and 20 characters.\", val => val && val.toString().length >= 3 && val.toString().length <= 20).required(\"This field is required!\"),\n    email: Yup.string().email(\"This is not a valid email.\").required(\"This field is required!\"),\n    password: Yup.string().test(\"len\", \"The password must be between 6 and 40 characters.\", val => val && val.toString().length >= 6 && val.toString().length <= 40).required(\"This field is required!\")\n  });\n\n  const handleRegister = formValue => {\n    const {\n      username,\n      email,\n      password\n    } = formValue;\n    setSuccessful(false);\n    dispatch(register({\n      username,\n      email,\n      password\n    })).unwrap().then(() => {\n      setSuccessful(true);\n    }).catch(() => {\n      setSuccessful(false);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"col-md-12 signup-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card card-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"//ssl.gstatic.com/accounts/ui/avatar_2x.png\",\n        alt: \"profile-img\",\n        className: \"profile-img-card\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: initialValues,\n        validationSchema: validationSchema,\n        onSubmit: handleRegister,\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: !successful && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"username\",\n                children: \"Username\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                name: \"username\",\n                type: \"text\",\n                className: \"form-control\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                name: \"username\",\n                component: \"div\",\n                className: \"alert alert-danger\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"email\",\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                name: \"email\",\n                type: \"email\",\n                className: \"form-control\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                name: \"email\",\n                component: \"div\",\n                className: \"alert alert-danger\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"password\",\n                children: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                name: \"password\",\n                type: \"password\",\n                className: \"form-control\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                name: \"password\",\n                component: \"div\",\n                className: \"alert alert-danger\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"btn btn-primary btn-block\",\n                children: \"Sign Up\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: successful ? \"alert alert-success\" : \"alert alert-danger\",\n        role: \"alert\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Register, \"zjVxq4UGnCl/YWmbvHguqOnDptI=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Register;\nexport default Register;\n\n/*#__PURE__*/\n_jsxDEV(Card, {\n  style: {\n    width: '35rem',\n    height: '40rem'\n  },\n  className: \"bg-dark mt-5 pt-4\",\n  children: /*#__PURE__*/_jsxDEV(Card.Body, {\n    children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n      className: \"my-4 \",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n      children: [/*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: initialValues,\n        validationSchema: validationSchema,\n        onSubmit: handleLogin,\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3 mx-5\",\n            controlId: \"formBasicEmail\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"email\",\n              placeholder: \"Enter email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"username\",\n              component: \"div\",\n              className: \"alert alert-danger\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3 mx-5\",\n            controlId: \"formBasicPassword\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"password\",\n              placeholder: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"username\",\n              component: \"div\",\n              className: \"alert alert-danger\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/forgotpassword\",\n                className: \"text-success\",\n                children: \"Forgot Passsword?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 44\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              className: \"btn-secondary mt-2 px-5 py-2\",\n              type: \"submit\",\n              disabled: loading && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"spinner-border spinner-border-sm\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 41\n              }, this),\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Login\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 21\n      }, this), message && /*#__PURE__*/_jsxDEV(Form.Group, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert alert-danger\",\n          role: \"alert\",\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        className: \"mt-5\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"New Here?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Let's get you set up to start sharing your groove!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"btn-secondary px-5 py-2\",\n          type: \"submit\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/register\",\n            className: \"text-decoration-none text-light\",\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 13\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 141,\n  columnNumber: 1\n}, this);\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["C:/Users/Taylor/array/projects/showyourgroove_chatroom/src/components/auth/logincard.jsx"],"names":["React","useState","useEffect","useDispatch","useSelector","Formik","Field","Form","ErrorMessage","Yup","register","clearMessage","Register","successful","setSuccessful","message","state","dispatch","initialValues","username","email","password","validationSchema","object","shape","string","test","val","toString","length","required","handleRegister","formValue","unwrap","then","catch","width","height","handleLogin","loading"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\nimport { register } from \"../slices/auth\";\r\nimport { clearMessage } from \"../slices/message\";\r\n\r\nconst Register = () => {\r\n  const [successful, setSuccessful] = useState(false);\r\n\r\n  const { message } = useSelector((state) => state.message);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(clearMessage());\r\n  }, [dispatch]);\r\n\r\n  const initialValues = {\r\n    username: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n  };\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    username: Yup.string()\r\n      .test(\r\n        \"len\",\r\n        \"The username must be between 3 and 20 characters.\",\r\n        (val) =>\r\n          val &&\r\n          val.toString().length >= 3 &&\r\n          val.toString().length <= 20\r\n      )\r\n      .required(\"This field is required!\"),\r\n    email: Yup.string()\r\n      .email(\"This is not a valid email.\")\r\n      .required(\"This field is required!\"),\r\n    password: Yup.string()\r\n      .test(\r\n        \"len\",\r\n        \"The password must be between 6 and 40 characters.\",\r\n        (val) =>\r\n          val &&\r\n          val.toString().length >= 6 &&\r\n          val.toString().length <= 40\r\n      )\r\n      .required(\"This field is required!\"),\r\n  });\r\n\r\n  const handleRegister = (formValue) => {\r\n    const { username, email, password } = formValue;\r\n\r\n    setSuccessful(false);\r\n\r\n    dispatch(register({ username, email, password }))\r\n      .unwrap()\r\n      .then(() => {\r\n        setSuccessful(true);\r\n      })\r\n      .catch(() => {\r\n        setSuccessful(false);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"col-md-12 signup-form\">\r\n      <div className=\"card card-container\">\r\n        <img\r\n          src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\r\n          alt=\"profile-img\"\r\n          className=\"profile-img-card\"\r\n        />\r\n        <Formik\r\n          initialValues={initialValues}\r\n          validationSchema={validationSchema}\r\n          onSubmit={handleRegister}\r\n        >\r\n          <Form>\r\n            {!successful && (\r\n              <div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"username\">Username</label>\r\n                  <Field name=\"username\" type=\"text\" className=\"form-control\" />\r\n                  <ErrorMessage\r\n                    name=\"username\"\r\n                    component=\"div\"\r\n                    className=\"alert alert-danger\"\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"email\">Email</label>\r\n                  <Field name=\"email\" type=\"email\" className=\"form-control\" />\r\n                  <ErrorMessage\r\n                    name=\"email\"\r\n                    component=\"div\"\r\n                    className=\"alert alert-danger\"\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"password\">Password</label>\r\n                  <Field\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    className=\"form-control\"\r\n                  />\r\n                  <ErrorMessage\r\n                    name=\"password\"\r\n                    component=\"div\"\r\n                    className=\"alert alert-danger\"\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <button type=\"submit\" className=\"btn btn-primary btn-block\">Sign Up</button>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </Form>\r\n        </Formik>\r\n      </div>\r\n\r\n      {message && (\r\n        <div className=\"form-group\">\r\n          <div\r\n            className={successful ? \"alert alert-success\" : \"alert alert-danger\"}\r\n            role=\"alert\"\r\n          >\r\n            {message}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n\r\n<Card style={{ width: '35rem', height: '40rem' }} className=\"bg-dark mt-5 pt-4\">\r\n            <Card.Body>\r\n                <Card.Title className=\"my-4 \">\r\n                    <h1>Sign In</h1>\r\n                </Card.Title>\r\n                <Card.Text>\r\n                    <Formik\r\n                        initialValues={initialValues}\r\n                        validationSchema={validationSchema}\r\n                        onSubmit={handleLogin}\r\n                    >\r\n                        <Form>\r\n                            <Form.Group className=\"mb-3 mx-5\" controlId=\"formBasicEmail\">\r\n                                <Form.Control type=\"email\" placeholder=\"Enter email\" />\r\n                                <ErrorMessage\r\n                                    name=\"username\"\r\n                                    component=\"div\"\r\n                                    className=\"alert alert-danger\"\r\n                                />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group className=\"mb-3 mx-5\" controlId=\"formBasicPassword\">\r\n                                <Form.Control type=\"password\" placeholder=\"Password\" />\r\n                                <ErrorMessage\r\n                                    name=\"username\"\r\n                                    component=\"div\"\r\n                                    className=\"alert alert-danger\"\r\n                                />\r\n                                <Form.Text><Link to=\"/forgotpassword\" className=\"text-success\">Forgot Passsword?</Link></Form.Text>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group>\r\n                                <Button className=\"btn-secondary mt-2 px-5 py-2\" type=\"submit\" disabled=\r\n                                {loading && (\r\n                                        <span className=\"spinner-border spinner-border-sm\"></span>\r\n                                    )}>\r\n                                    <span>Login</span>\r\n                                </Button>\r\n                            </Form.Group>\r\n                        </Form>\r\n                    </Formik>\r\n\r\n                    {message && (\r\n                        <Form.Group>\r\n                            <div className=\"alert alert-danger\" role=\"alert\">\r\n                                {message}\r\n                            </div>\r\n                        </Form.Group>\r\n                    )}\r\n                    <Container className=\"mt-5\">\r\n                        <h1>New Here?</h1>\r\n                        <p>Let's get you set up to start sharing your groove!</p>\r\n                        <Button className=\"btn-secondary px-5 py-2\" type=\"submit\">\r\n                            <Link to=\"/register\" className=\"text-decoration-none text-light\">\r\n                                Register\r\n                            </Link>\r\n                        </Button>\r\n                    </Container>\r\n                </Card.Text>\r\n            </Card.Body>\r\n        </Card>"]},"metadata":{},"sourceType":"module"}