{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Taylor\\\\array\\\\projects\\\\showyourgroove_chatroom\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { Route, Switch } from 'react-router-dom';\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Homepage from './components/Homepage';\nimport FirstChatroom from './components/chatrooms/publicRooms/FirstChatroom';\nimport AboutUs from './components/AboutUs';\nimport LoginPage from './components/Login';\nimport RegisterPage from './components/Register';\nimport Profile from './components/user/profile';\nimport BoardUser from './components/user/BoardUser';\nimport BoardAdmin from './components/user/BoardAdmin';\nimport { logout } from \"./state/authSlice\";\nimport eventBus from './common/EventBus';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [showModeratorBoard, setShowModeratorBoard] = useState(false);\n  const [showAdminBoard, setShowAdminBoard] = useState(false);\n  const {\n    user: currentUser\n  } = useSelector(state => state.auth);\n  const dispatch = useDispatch();\n  const logOut = useCallback(() => {\n    dispatch(logout());\n  }, [dispatch]);\n  useEffect(() => {\n    if (currentUser) {\n      setShowModeratorBoard(currentUser.roles.includes(\"ROLE_MODERATOR\"));\n      setShowAdminBoard(currentUser.roles.includes(\"ROLES_ADMIN\"));\n    } else {\n      setShowModeratorBoard(false);\n      setShowAdminBoard(false);\n    }\n\n    eventBus.on(\"logout\");\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: true,\n        exact: \"/#\",\n        children: /*#__PURE__*/_jsxDEV(Homepage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/aboutus\",\n        children: /*#__PURE__*/_jsxDEV(AboutUs, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/firstchatroom\",\n        children: /*#__PURE__*/_jsxDEV(FirstChatroom, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        children: /*#__PURE__*/_jsxDEV(LoginPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/register\",\n        children: /*#__PURE__*/_jsxDEV(RegisterPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"agEcXlNuPV402UHTM+D2LV7mDmY=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Taylor/array/projects/showyourgroove_chatroom/src/App.js"],"names":["Route","Switch","React","useState","useEffect","useCallback","useDispatch","useSelector","Homepage","FirstChatroom","AboutUs","LoginPage","RegisterPage","Profile","BoardUser","BoardAdmin","logout","eventBus","App","showModeratorBoard","setShowModeratorBoard","showAdminBoard","setShowAdminBoard","user","currentUser","state","auth","dispatch","logOut","roles","includes","on"],"mappings":";;;AAAA,OAAO,WAAP;AACA,SAASA,KAAT,EAAgBC,MAAhB,QAA8B,kBAA9B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,WAArC,QAAwD,OAAxD;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,aAAP,MAA0B,kDAA1B;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AAEA,SAASC,MAAT,QAAuB,mBAAvB;AAEA,OAAOC,QAAP,MAAqB,mBAArB;;;;AAIA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,kBAAD,EAAqBC,qBAArB,IAA8CjB,QAAQ,CAAC,KAAD,CAA5D;AACA,QAAM,CAACkB,cAAD,EAAiBC,iBAAjB,IAAsCnB,QAAQ,CAAC,KAAD,CAApD;AAEA,QAAM;AAAEoB,IAAAA,IAAI,EAAEC;AAAR,MAAwBjB,WAAW,CAAEkB,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAAzC;AACA,QAAMC,QAAQ,GAAGrB,WAAW,EAA5B;AAEA,QAAMsB,MAAM,GAAGvB,WAAW,CAAC,MAAM;AAC/BsB,IAAAA,QAAQ,CAACX,MAAM,EAAP,CAAR;AACD,GAFyB,EAEvB,CAACW,QAAD,CAFuB,CAA1B;AAIAvB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIoB,WAAJ,EAAiB;AACfJ,MAAAA,qBAAqB,CAACI,WAAW,CAACK,KAAZ,CAAkBC,QAAlB,CAA2B,gBAA3B,CAAD,CAArB;AACAR,MAAAA,iBAAiB,CAACE,WAAW,CAACK,KAAZ,CAAkBC,QAAlB,CAA2B,aAA3B,CAAD,CAAjB;AACD,KAHD,MAGO;AACLV,MAAAA,qBAAqB,CAAC,KAAD,CAArB;AACAE,MAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACD;;AAEDL,IAAAA,QAAQ,CAACc,EAAT,CAAY,QAAZ;AAED,GAXQ,CAAT;AAaA,sBACE;AAAA,2BACE,QAAC,MAAD;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,IAAI,MAAX;AAAY,QAAA,KAAK,EAAC,IAAlB;AAAA,+BACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAA,+BACE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAJF,eAOE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,gBAAZ;AAAA,+BACE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAPF,eAUE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAA,+BACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAVF,eAaE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,WAAZ;AAAA,+BACE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAbF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAqBD;;GA7CQb,G;UAIuBX,W,EACbD,W;;;KALVY,G;AA+CT,eAAeA,GAAf","sourcesContent":["import './App.css'\r\nimport { Route, Switch } from 'react-router-dom'\r\nimport React, { useState, useEffect, useCallback } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport Homepage from './components/Homepage';\r\nimport FirstChatroom from './components/chatrooms/publicRooms/FirstChatroom';\r\nimport AboutUs from './components/AboutUs';\r\nimport LoginPage from './components/Login';\r\nimport RegisterPage from './components/Register';\r\nimport Profile from './components/user/profile';\r\nimport BoardUser from './components/user/BoardUser';\r\nimport BoardAdmin from './components/user/BoardAdmin';\r\n\r\nimport { logout } from \"./state/authSlice\"\r\n\r\nimport eventBus from './common/EventBus';\r\n\r\n\r\n\r\nfunction App() {\r\n  const [showModeratorBoard, setShowModeratorBoard] = useState(false);\r\n  const [showAdminBoard, setShowAdminBoard] = useState(false);\r\n\r\n  const { user: currentUser } = useSelector((state) => state.auth);\r\n  const dispatch = useDispatch();\r\n\r\n  const logOut = useCallback(() => {\r\n    dispatch(logout());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (currentUser) {\r\n      setShowModeratorBoard(currentUser.roles.includes(\"ROLE_MODERATOR\"));\r\n      setShowAdminBoard(currentUser.roles.includes(\"ROLES_ADMIN\"));\r\n    } else {\r\n      setShowModeratorBoard(false);\r\n      setShowAdminBoard(false);\r\n    }\r\n\r\n    eventBus.on(\"logout\")\r\n\r\n  })\r\n\r\n  return (\r\n    <>\r\n      <Switch>\r\n        <Route path exact=\"/#\">\r\n          <Homepage />\r\n        </Route>\r\n        <Route path=\"/aboutus\">\r\n          <AboutUs />\r\n        </Route>\r\n        <Route path=\"/firstchatroom\">\r\n          <FirstChatroom />\r\n        </Route>\r\n        <Route path=\"/login\">\r\n          <LoginPage />\r\n        </Route>\r\n        <Route path=\"/register\">\r\n          <RegisterPage />\r\n        </Route>\r\n      </Switch>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}