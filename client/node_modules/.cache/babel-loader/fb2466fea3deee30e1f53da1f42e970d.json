{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Taylor\\\\array\\\\projects\\\\showyourgroove_chatroom\\\\src\\\\components\\\\auth\\\\logincard.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport { Formik, ErrorMessage } from \"formik\";\nimport { Link } from \"react-router-dom\";\nimport * as Yup from \"yup\";\nimport Container from 'react-bootstrap/Container';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport { login } from \"../../state/authSlice\";\nimport { clearMessage } from \"../../state/messageSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = props => {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n  const {\n    isLoggedIn\n  } = useSelector(state => state.auth);\n  const {\n    message\n  } = useSelector(state => state.message);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(clearMessage());\n  }, [dispatch]);\n  const initialValues = {\n    username: \"\",\n    password: \"\"\n  };\n  const validationSchema = Yup.object().shape({\n    username: Yup.string().required(\"This field is required!\"),\n    password: Yup.string().required(\"This field is required!\")\n  });\n\n  const handleLogin = formValue => {\n    const {\n      username,\n      password\n    } = formValue;\n    setLoading(true);\n    dispatch(login({\n      username,\n      password\n    })).unwrap().then(() => {\n      props.history.push(\"/profile\");\n      window.location.reload();\n    }).catch(() => {\n      setLoading(false);\n    });\n  };\n\n  if (isLoggedIn) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"col-md-12 login-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card card-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"//ssl.gstatic.com/accounts/ui/avatar_2x.png\",\n        alt: \"profile-img\",\n        className: \"profile-img-card\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: initialValues,\n        validationSchema: validationSchema,\n        onSubmit: handleLogin,\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3 mx-5\",\n            controlId: \"formBasicEmail\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"email\",\n              placeholder: \"Enter email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"username\",\n              component: \"div\",\n              className: \"alert alert-danger\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3 mx-5\",\n            controlId: \"formBasicPassword\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"password\",\n              placeholder: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"username\",\n              component: \"div\",\n              className: \"alert alert-danger\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/forgotpassword\",\n                className: \"text-success\",\n                children: \"Forgot Passsword?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 44\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              className: \"btn-secondary mt-2 px-5 py-2\",\n              type: \"submit\",\n              disabled: loading && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"spinner-border spinner-border-sm\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 41\n              }, this),\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Login\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-danger\",\n        role: \"alert\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"FsGQvZ/Bbm8H2WiWMG/q4+O9ZwA=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = Login;\nexport default Login;\n{\n  /* <Card style={{ width: '35rem', height: '40rem' }} className=\"bg-dark mt-5 pt-4\">\r\n             <Card.Body>\r\n                 <Card.Title className=\"my-4 \">\r\n                     <h1>Sign In</h1>\r\n                 </Card.Title>\r\n                 <Card.Text>\r\n                     <Formik\r\n                         initialValues={initialValues}\r\n                         validationSchema={validationSchema}\r\n                         onSubmit={handleLogin}\r\n                     >\r\n                         <Form>\r\n                             <Form.Group className=\"mb-3 mx-5\" controlId=\"formBasicEmail\">\r\n                                 <Form.Control type=\"email\" placeholder=\"Enter email\" />\r\n                                 <ErrorMessage\r\n                                     name=\"username\"\r\n                                     component=\"div\"\r\n                                     className=\"alert alert-danger\"\r\n                                 />\r\n                             </Form.Group>\r\n  \n                             <Form.Group className=\"mb-3 mx-5\" controlId=\"formBasicPassword\">\r\n                                 <Form.Control type=\"password\" placeholder=\"Password\" />\r\n                                 <ErrorMessage\r\n                                     name=\"username\"\r\n                                     component=\"div\"\r\n                                     className=\"alert alert-danger\"\r\n                                 />\r\n                                 <Form.Text><Link to=\"/forgotpassword\" className=\"text-success\">Forgot Passsword?</Link></Form.Text>\r\n                             </Form.Group>\r\n  \n                             <Form.Group>\r\n                                 <Button className=\"btn-secondary mt-2 px-5 py-2\" type=\"submit\" disabled=\r\n                                 {loading && (\r\n                                         <span className=\"spinner-border spinner-border-sm\"></span>\r\n                                     )}>\r\n                                     <span>Login</span>\r\n                                 </Button>\r\n                             </Form.Group>\r\n                         </Form>\r\n                     </Formik>\r\n  \n                     {message && (\r\n                         <Form.Group>\r\n                             <div className=\"alert alert-danger\" role=\"alert\">\r\n                                 {message}\r\n                             </div>\r\n                         </Form.Group>\r\n                     )}\r\n                     <Container className=\"mt-5\">\r\n                         <h1>New Here?</h1>\r\n                         <p>Let's get you set up to start sharing your groove!</p>\r\n                         <Button className=\"btn-secondary px-5 py-2\" type=\"submit\">\r\n                             <Link to=\"/register\" className=\"text-decoration-none text-light\">\r\n                                 Register\r\n                             </Link>\r\n                         </Button>\r\n                     </Container>\r\n                 </Card.Text>\r\n             </Card.Body>\r\n         </Card> */\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/Taylor/array/projects/showyourgroove_chatroom/src/components/auth/logincard.jsx"],"names":["React","useState","useEffect","useDispatch","useSelector","Redirect","Formik","ErrorMessage","Link","Yup","Container","Card","Button","login","clearMessage","Login","props","loading","setLoading","isLoggedIn","state","auth","message","dispatch","initialValues","username","password","validationSchema","object","shape","string","required","handleLogin","formValue","unwrap","then","history","push","window","location","reload","catch"],"mappings":"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","sourcesContent":["import React, { useState, useEffect  } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { Formik, ErrorMessage } from \"formik\";\r\nimport { Link } from \"react-router-dom\";\r\nimport * as Yup from \"yup\";\r\n\r\nimport Container from 'react-bootstrap/Container'\r\nimport Card from 'react-bootstrap/Card'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nimport { login } from \"../../state/authSlice\";\r\nimport { clearMessage } from \"../../state/messageSlice\";\r\n\r\nconst Login = (props) => {\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const { isLoggedIn } = useSelector((state) => state.auth);\r\n  const { message } = useSelector((state) => state.message);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(clearMessage());\r\n  }, [dispatch]);\r\n\r\n  const initialValues = {\r\n    username: \"\",\r\n    password: \"\",\r\n  };\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    username: Yup.string().required(\"This field is required!\"),\r\n    password: Yup.string().required(\"This field is required!\"),\r\n  });\r\n\r\n  const handleLogin = (formValue) => {\r\n    const { username, password } = formValue;\r\n    setLoading(true);\r\n\r\n    dispatch(login({ username, password }))\r\n      .unwrap()\r\n      .then(() => {\r\n        props.history.push(\"/profile\");\r\n        window.location.reload();\r\n      })\r\n      .catch(() => {\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  if (isLoggedIn) {\r\n    return <Redirect to=\"/profile\" />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"col-md-12 login-form\">\r\n      <div className=\"card card-container\">\r\n        <img\r\n          src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\r\n          alt=\"profile-img\"\r\n          className=\"profile-img-card\"\r\n        />\r\n        <Formik\r\n                        initialValues={initialValues}\r\n                        validationSchema={validationSchema}\r\n                        onSubmit={handleLogin}\r\n                    >\r\n                        <Form>\r\n                            <Form.Group className=\"mb-3 mx-5\" controlId=\"formBasicEmail\">\r\n                                <Form.Control type=\"email\" placeholder=\"Enter email\" />\r\n                                <ErrorMessage\r\n                                    name=\"username\"\r\n                                    component=\"div\"\r\n                                    className=\"alert alert-danger\"\r\n                                />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group className=\"mb-3 mx-5\" controlId=\"formBasicPassword\">\r\n                                <Form.Control type=\"password\" placeholder=\"Password\" />\r\n                                <ErrorMessage\r\n                                    name=\"username\"\r\n                                    component=\"div\"\r\n                                    className=\"alert alert-danger\"\r\n                                />\r\n                                <Form.Text><Link to=\"/forgotpassword\" className=\"text-success\">Forgot Passsword?</Link></Form.Text>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group>\r\n                                <Button className=\"btn-secondary mt-2 px-5 py-2\" type=\"submit\" disabled=\r\n                                {loading && (\r\n                                        <span className=\"spinner-border spinner-border-sm\"></span>\r\n                                    )}>\r\n                                    <span>Login</span>\r\n                                </Button>\r\n                            </Form.Group>\r\n                        </Form>\r\n                    </Formik>\r\n      </div>\r\n\r\n      {message && (\r\n        <div className=\"form-group\">\r\n          <div className=\"alert alert-danger\" role=\"alert\">\r\n            {message}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n\r\n{/* <Card style={{ width: '35rem', height: '40rem' }} className=\"bg-dark mt-5 pt-4\">\r\n            <Card.Body>\r\n                <Card.Title className=\"my-4 \">\r\n                    <h1>Sign In</h1>\r\n                </Card.Title>\r\n                <Card.Text>\r\n                    <Formik\r\n                        initialValues={initialValues}\r\n                        validationSchema={validationSchema}\r\n                        onSubmit={handleLogin}\r\n                    >\r\n                        <Form>\r\n                            <Form.Group className=\"mb-3 mx-5\" controlId=\"formBasicEmail\">\r\n                                <Form.Control type=\"email\" placeholder=\"Enter email\" />\r\n                                <ErrorMessage\r\n                                    name=\"username\"\r\n                                    component=\"div\"\r\n                                    className=\"alert alert-danger\"\r\n                                />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group className=\"mb-3 mx-5\" controlId=\"formBasicPassword\">\r\n                                <Form.Control type=\"password\" placeholder=\"Password\" />\r\n                                <ErrorMessage\r\n                                    name=\"username\"\r\n                                    component=\"div\"\r\n                                    className=\"alert alert-danger\"\r\n                                />\r\n                                <Form.Text><Link to=\"/forgotpassword\" className=\"text-success\">Forgot Passsword?</Link></Form.Text>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group>\r\n                                <Button className=\"btn-secondary mt-2 px-5 py-2\" type=\"submit\" disabled=\r\n                                {loading && (\r\n                                        <span className=\"spinner-border spinner-border-sm\"></span>\r\n                                    )}>\r\n                                    <span>Login</span>\r\n                                </Button>\r\n                            </Form.Group>\r\n                        </Form>\r\n                    </Formik>\r\n\r\n                    {message && (\r\n                        <Form.Group>\r\n                            <div className=\"alert alert-danger\" role=\"alert\">\r\n                                {message}\r\n                            </div>\r\n                        </Form.Group>\r\n                    )}\r\n                    <Container className=\"mt-5\">\r\n                        <h1>New Here?</h1>\r\n                        <p>Let's get you set up to start sharing your groove!</p>\r\n                        <Button className=\"btn-secondary px-5 py-2\" type=\"submit\">\r\n                            <Link to=\"/register\" className=\"text-decoration-none text-light\">\r\n                                Register\r\n                            </Link>\r\n                        </Button>\r\n                    </Container>\r\n                </Card.Text>\r\n            </Card.Body>\r\n        </Card> */}"]},"metadata":{},"sourceType":"module"}