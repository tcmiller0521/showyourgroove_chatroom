{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Taylor\\\\array\\\\projects\\\\showyourgroove_chatroom\\\\src\\\\components\\\\chatrooms\\\\publicRooms\\\\ChatRoom.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectPostList } from '../../../state/postListSlice';\nimport { createPost } from '../../../state/postListSlice';\nimport Posts from '../posts/Posts';\nimport { Row, Col, Container, Form, Button, Stack } from 'react-bootstrap'; // import Rooms from '../rooms/Rooms'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ChatRoom() {\n  _s();\n\n  const dispatch = useDispatch();\n  const allPosts = useSelector(selectPostList);\n  const postObj = {\n    message: ''\n  };\n  const [postData, setPostData] = useState(postObj);\n\n  const clear = () => {\n    setPostData(postObj);\n    console.log(postObj);\n  };\n\n  const submitHandler = e => {\n    e.preventDefault(); // console.log(e)\n\n    dispatch(createPost(postData));\n    clear();\n  };\n\n  const changeHandler = e => {\n    setPostData({ ...postData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      className: \"mainChat\",\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        className: \"chatHead\",\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"This is the chatroom\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"chatBody\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          xs: \"9\",\n          className: \"chatFeed\",\n          children: /*#__PURE__*/_jsxDEV(Posts, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: \"2\",\n          className: \"chatPop\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Stack, {\n          direction: \"horizontal\",\n          gap: 3,\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            autoComplete: \"off\",\n            onSubmit: submitHandler,\n            children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n              className: \"me-auto\",\n              name: \"message\",\n              placeholder: \"What's your Groove?\",\n              value: postData.message,\n              onChange: changeHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"secondary\",\n              type: \"submit\",\n              children: \"POST\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ChatRoom, \"J79Q9YMb9QF+BNYlfbxmA4DJFP0=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = ChatRoom;\nexport default ChatRoom;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatRoom\");","map":{"version":3,"sources":["C:/Users/Taylor/array/projects/showyourgroove_chatroom/src/components/chatrooms/publicRooms/ChatRoom.jsx"],"names":["React","useState","useEffect","useDispatch","useSelector","selectPostList","createPost","Posts","Row","Col","Container","Form","Button","Stack","ChatRoom","dispatch","allPosts","postObj","message","postData","setPostData","clear","console","log","submitHandler","e","preventDefault","changeHandler","target","name","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { selectPostList } from '../../../state/postListSlice';\r\n\r\nimport { createPost } from '../../../state/postListSlice';\r\n\r\nimport Posts from '../posts/Posts';\r\n\r\nimport {\r\n    Row, \r\n    Col, \r\n    Container, \r\n    Form,\r\n    Button,\r\n    Stack \r\n} from 'react-bootstrap'\r\n\r\n// import Rooms from '../rooms/Rooms'\r\n\r\nfunction ChatRoom() {\r\n    const dispatch = useDispatch();\r\n    const allPosts = useSelector(selectPostList);\r\n\r\n    const postObj = {\r\n        message: '',\r\n    };\r\n\r\n    const [ postData, setPostData ] = useState(postObj);\r\n\r\n    const clear = () => {\r\n        setPostData(postObj);\r\n        console.log(postObj)\r\n    };\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        // console.log(e)\r\n        dispatch(createPost(postData));\r\n        \r\n\r\n        clear();\r\n    };\r\n\r\n    const changeHandler = (e) => {\r\n        setPostData ({\r\n            ...postData,\r\n            [ e.target.name ]: e.target.value,\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {/* <Rooms /> */}\r\n            <Container className=\"mainChat\">\r\n                {/* Chatroom Header */}\r\n                <Row className='chatHead'>\r\n                    <Col>\r\n                        {/* Chatroom title */}\r\n                        <h1>This is the chatroom</h1> \r\n                    </Col>\r\n                </Row>\r\n                <Row className='chatBody'>\r\n                    {/* Chatroom Feed */}\r\n\r\n                    <Col xs=\"9\" className='chatFeed'>\r\n                        <Posts />\r\n                    </Col> \r\n                    {/* Chatroom Population (current users populating room) */}\r\n                    <Col xs=\"2\"className='chatPop'></Col>\r\n                </Row>\r\n                <Row>\r\n                    {/* Chatroom Input */}\r\n                    {/* <Col xs='auto'> */}\r\n                        <Stack direction=\"horizontal\" gap={3}>\r\n                            <Form autoComplete='off' onSubmit={submitHandler}>\r\n                                <Form.Control  className=\"me-auto\" name=\"message\" placeholder=\"What's your Groove?\" value={postData.message} onChange={changeHandler}/>\r\n                            \r\n                                <Button variant=\"secondary\" type=\"submit\">POST</Button>\r\n                            </Form>\r\n                        </Stack>\r\n                        {/* <form autoComplete='off' onSubmit={submitHandler}>\r\n                            <div><input name=\"message\" placeholder=\"What's your Groove?\" value={postData.message} onChange={changeHandler}/></div>\r\n                            <button type=\"submit\">Post</button>\r\n                        </form> */}\r\n\r\n                    {/* </Col> */}\r\n                </Row>\r\n            </Container>\r\n            \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChatRoom\r\n"]},"metadata":{},"sourceType":"module"}